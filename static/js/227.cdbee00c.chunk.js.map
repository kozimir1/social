{"version":3,"file":"static/js/227.cdbee00c.chunk.js","mappings":"wKACA,GAAgB,QAAU,yBAAyB,MAAQ,uBAAuB,IAAM,qBAAqB,OAAS,wBAAwB,OAAS,wBAAwB,QAAU,0B,mBCczL,EAXmB,SAACA,GAChB,IAAMC,EAAO,YAAcD,EAAME,GACjC,OACI,iBAAKC,UAAWC,EAAAA,OAAhB,WACI,gBAAKD,UAAWC,EAAAA,OAChB,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,SAGrC,ECAD,EARsB,SAACC,GACnB,OAEQ,gBAAKJ,UAAWC,EAAAA,QAAhB,SAA6BG,EAAMC,SAE9C,E,uCCCKC,GAAaC,EAAAA,EAAAA,GAAkB,IAe/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,eAAjBD,EAdL,SAACZ,GACjB,OACI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUZ,KAAK,aACjCa,SAAU,CAACC,EAAAA,EAAUX,GACdY,YAAY,0BAEvB,0BACI,mBAAQlB,UAAWC,EAAAA,OAAnB,8BAIf,IAiCD,EA9BgB,SAACJ,GACb,IAAMsB,EAAWtB,EAAMuB,QAClBC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,MAAWmB,EAAEvB,GAArC,IAEJwB,EAAY1B,EAAM2B,SACnBH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAAepB,QAASoB,EAAEpB,SAAcoB,EAAE1B,GAA9C,IAYV,OACI,iBAAKC,UAAWC,EAAAA,QAAhB,WACI,gBAAKD,UAAWC,EAAAA,MAAhB,SACKkB,KAEL,iBAAKnB,UAAWC,EAAAA,SAAhB,UACKsB,GACD,SAACf,EAAD,CAAkBG,SAVZ,SAACe,GACf7B,EAAM8B,YAAYD,EAAOE,WAC5B,SAaJ,E,oBCDD,GAAeC,E,QAAAA,KAAQC,EAAAA,EAAAA,KA3BC,SAACC,GACrB,MAAO,CACHX,QAASW,EAAMC,YAAYZ,QAC3BI,SAAUO,EAAMC,YAAYR,SAC5BI,WAAYG,EAAMC,YAAYJ,WAGrC,IAC0B,SAACK,GACxB,MAAO,CACHN,YAAa,SAACtB,GACV4B,GAASC,EAAAA,EAAAA,GAAyB7B,GACrC,EAKR,IAWG8B,EAAAA,EADJ,CAEEC,E","sources":["webpack://less-4/./src/components/Main/Dialogs/Dialogs.module.css?6b47","components/Main/Dialogs/PersonItem/PersonItem.jsx","components/Main/Dialogs/PersonMessage/PersonMassage.jsx","components/Main/Dialogs/Dialogs.jsx","components/Main/Dialogs/DialogsContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__u4mRz\",\"items\":\"Dialogs_items__JfvJT\",\"ava\":\"Dialogs_ava__YW7Me\",\"person\":\"Dialogs_person__ujnq7\",\"active\":\"Dialogs_active__+xCBg\",\"message\":\"Dialogs_message__lZV5I\"};","import React from 'react';\r\nimport cl from \"./../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst PersonItem = (props) => {\r\n    const path = '/dialogs/' + props.id\r\n    return (\r\n        <div className={cl.person}>\r\n            <div className={cl.ava}></div>\r\n            <NavLink to={path}>{props.name}</NavLink></div>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default PersonItem","import React from 'react';\r\nimport cl from \"./../Dialogs.module.css\";\r\n\r\n\r\nconst PersonMessage = (probs) => {\r\n    return (\r\n\r\n            <div className={cl.message}>{probs.message}</div>\r\n    )\r\n}\r\n\r\n\r\nexport default PersonMessage","import React from 'react';\r\nimport cl from \"./Dialogs.module.css\";\r\nimport PersonItem from \"./PersonItem/PersonItem\";\r\nimport PersonMessage from \"./PersonMessage/PersonMassage\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport { maxLengthCreator, required} from \"../../../util/validators/validators\";\r\nimport {TextAria} from \"../../common/FormsControl\";\r\n\r\n\r\n\r\nconst maxLength15 =maxLengthCreator (15)\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextAria} name=\"newMessage\"\r\n                validate={[required, maxLength15]}\r\n                       placeholder=\"enter your message\" />\r\n            </div>\r\n            <div>\r\n                <button className={cl.button}>send message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nconst DialogsFormRedux = reduxForm({form: 'dialogsForm'})(DialogsForm)\r\n\r\nconst Dialogs = (props) => {\r\n    const personEl = props.persons\r\n        .map(p => <PersonItem name={p.name} key={p.id}/>)\r\n\r\n    const messageEL = props.messages\r\n        .map(m => <PersonMessage message={m.message} key={m.id}/>)\r\n\r\n    // const onSendMessage = () => {\r\n    //     props.sendMessage()\r\n    // }\r\n    // const onMessageChange = (e) => {\r\n    //     const text = e.target.value\r\n    //     props.messageChange(text)\r\n    // }\r\n    const newDialog = (values)=>{\r\n        props.sendMessage(values.newMessage)\r\n    }\r\n    return (\r\n        <div className={cl.dialogs}>\r\n            <div className={cl.items}>\r\n                {personEl}\r\n            </div>\r\n            <div className={cl.messages}>\r\n                {messageEL}\r\n                <DialogsFormRedux onSubmit={newDialog}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import React from 'react';\r\nimport {sendMessageActionCreator} from \"../../../Redux/dialogspage-reduser\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\n// const DialogsContainer = () => {\r\n//     return <StoreContext.Consumer>\r\n//         {store => {\r\n//             const state = store.getState()\r\n//\r\n//             const sendMessage = () => {\r\n//                 store.dispatch(sendMessageActionCreator())\r\n//             }\r\n//             const onMessageChange = (text) => {\r\n//                 store.dispatch(onMessageChangeActionCreator(text))\r\n//             }\r\n//             return <Dialogs messageChange={onMessageChange} sendMessage={sendMessage}\r\n//                             persons={state.dialogsPage.persons}\r\n//                             messages={state.dialogsPage.messages} newMessage={state.dialogsPage.newMessage}/>\r\n//         }\r\n//         }\r\n//     </StoreContext.Consumer>\r\n//\r\n// }\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        persons: state.dialogsPage.persons,\r\n        messages: state.dialogsPage.messages,\r\n        newMessage: state.dialogsPage.newMessage,\r\n        // auth: state.auth.isAuth\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (message) => {\r\n            dispatch(sendMessageActionCreator(message))\r\n        },\r\n        // messageChange: (text) => {\r\n        //     dispatch(onMessageChangeActionCreator(text))\r\n        // },\r\n    }\r\n}\r\n\r\n //    = (props) =>{\r\n //    if (!props.auth) return <Navigate to='/login'/>\r\n //     return <Dialogs {...props}/>\r\n // }\r\n//эти 2 вместо compose\r\n// const AuthRedirect =withAuthRedirect(Dialogs)\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirect)\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n"],"names":["props","path","id","className","cl","to","name","probs","message","maxLength15","maxLengthCreator","DialogsFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextAria","validate","required","placeholder","personEl","persons","map","p","messageEL","messages","m","values","sendMessage","newMessage","compose","connect","state","dialogsPage","dispatch","sendMessageActionCreator","withAuthRedirect","Dialogs"],"sourceRoot":""}