{"version":3,"file":"static/js/953.b823a153.chunk.js","mappings":"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","sources":["components/Main/Profile/Profile.module.css","webpack://less-4/./src/components/Main/Profile/Person/Person.module.css?c472","components/Main/Profile/Person/Person.jsx","webpack://less-4/./src/components/Main/Profile/Posts/Posts.module.css?751d","webpack://less-4/./src/components/Main/Profile/Posts/Post/Post.module.css?ab2a","components/Main/Profile/Posts/Post/Post.jsx","components/Main/Profile/Posts/Posts.jsx","components/Main/Profile/Posts/PostsСontainer.jsx","webpack://less-4/./src/components/Main/Profile/Guest/Guest.module.css?78b3","components/Main/Profile/Guest/ProfileStatusWithUseState.jsx","components/Main/Profile/Guest/Guest.jsx","components/Main/Profile/Profile.jsx","components/Main/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"Person_image__2-Pji\",\"person\":\"Person_person__N1bp1\"};","import React from \"react\";\r\nimport cl from './Person.module.css'\r\nimport pic from '../../../../img/Image.jpg'\r\n\r\nconst Person= React.memo((props)=> {\r\n    return (\r\n        <div>\r\n            <div className={cl.image}><img src={pic} alt='картинки нет'/></div>\r\n            <div className={cl.person}>Person</div>\r\n        </div>\r\n\r\n    )\r\n})\r\n\r\n\r\nexport default Person","// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"Posts_posts__frCTR\",\"title\":\"Posts_title__RWQF1\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__2Wyvs\"};","import React from \"react\";\r\nimport cl from './Post.module.css'\r\n\r\n\r\nconst Post =(props)=>{\r\n    return(\r\n        <div className={cl.item}>{props.message}\r\n            <div>Likes {props.likesCount}</div>\r\n        </div>\r\n    )\r\n}\r\nexport default Post","import React from \"react\";\r\nimport cl from './Posts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../../util/validators/validators\";\r\nimport {TextAria} from \"../../../common/FormsControl\";\r\n\r\nconst maxlength50 = maxLengthCreator(50)\r\nconst addPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name=\"addNewPostEl\" component={TextAria}\r\n                       validate={[required, maxlength50]}\r\n                       placeholder=\"Hello everybody\"/>\r\n            </div>\r\n            <button className=\"new\">add Post</button>\r\n        </form>\r\n\r\n    )\r\n}\r\nconst AddPostReduxForm = reduxForm({form: 'addPost'})(addPostForm)\r\n\r\nconst Posts = (props) => {\r\n    console.log(`Render Post`)\r\n    const postEL = props.posts\r\n        .map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n\r\n    // const createNewPostEl = React.createRef()\r\n    // const onAddPost = () => {\r\n    //     props.addPost()\r\n    // }\r\n    // const onPostChange = () => {\r\n    //     const text = createNewPostEl.current.value\r\n    //     props.newMessageChange(text)\r\n    // }\r\n    const createNewPost=(values)=>{\r\n        props.addPost(values.addNewPostEl)\r\n    }\r\n    return (\r\n        <div className={cl.posts}>\r\n            <div className={cl.title}>Posts</div>\r\n            <AddPostReduxForm onSubmit={createNewPost} />\r\n            {postEL}\r\n            {/*{[`fsdfsdfsdf`, ` like spread`]}*/}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Posts","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../../Redux/profilepage-reduser\";\r\nimport Posts from \"./Posts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const PostsСontainer = (props) => {\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {(store) => {\r\n//                 const state = store.getState()\r\n//                 const addPost = () => {\r\n//                     store.dispatch(addPostActionCreator())\r\n//                 }\r\n//                 const PostChange = (text) => {\r\n//                     store.dispatch(onPostChangeActionCreator(text))\r\n//                 }\r\n//                 return <Posts newMessageChange={PostChange} addPost={addPost} posts={store.getState().profilePage.posts}\r\n//                               newTextPost={store.getState().profilePage.newTextPost}/>\r\n//             }}\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newTextPost: state.profilePage.newTextPost\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n            },\r\n    }\r\n}\r\n\r\nconst PostsСontainer = connect(mapStateToProps, mapDispatchToProps)(Posts)\r\nexport default PostsСontainer","// extracted by mini-css-extract-plugin\nexport default {\"guest\":\"Guest_guest__dXTPZ\",\"content\":\"Guest_content__q42lc\",\"image\":\"Guest_image__F1kUR\"};","import React, {useEffect, useState} from 'react';\r\n\r\n\r\nconst ProfileStatusWithUseState = (props) => {\r\n    const [editMode, setEditMode] = useState(false)\r\n    const [status, setStatus] = useState(props.status)\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditeMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditeMode = () => {\r\n        setEditMode(false)\r\n        props.setStatusThunk(status)\r\n    }\r\n    const onChangeStatus = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditeMode}> {props.status || `статуса нет`}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onChangeStatus} autoFocus={true} onBlur={deactivateEditeMode}\r\n                           value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ProfileStatusWithUseState;","import React from \"react\";\r\nimport cl from './Guest.module.css'\r\nimport Preloader from \"../../../common/Preloader\";\r\nimport ProfileStatusWithUseState from \"./ProfileStatusWithUseState\";\r\n\r\nconst Guest = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={cl.guest}>\r\n                <div className={cl.image}><img src={props.profile.photos.large} alt='картинки нет'/></div>\r\n                <div className={cl.content}>\r\n                    <div>About: {props.profile.aboutMe}</div>\r\n                    <div>Name: {props.profile.fullName}</div>\r\n                    <div>Find job: {props.profile.lookingForAJob\r\n                        ? props.profile.lookingForAJobDescription\r\n                        : \"не ищу\"} </div>\r\n                </div>\r\n            </div>\r\n            <ProfileStatusWithUseState setStatusThunk={props.setStatusThunk}\r\n                           status={props.status}/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Guest","import React from \"react\";\r\nimport cl from './Profile.module.css'\r\nimport Person from \"./Person/Person\";\r\nimport PostsСontainer from \"./Posts/PostsСontainer\";\r\nimport Guest from \"./Guest/Guest\";\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div className={cl.profile}>\r\n            <Person name=\"dima\"/>\r\n            <Guest profile={props.profile} setStatusThunk={props.setStatusThunk}\r\n                   status={props.status} isAuth={props.isAuth}/>\r\n            <PostsСontainer/>\r\n        </div>\r\n    )\r\n}\r\nexport default Profile","import React from \"react\";\r\nimport cl from './Profile.module.css'\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getSomeOneProfileThunk, getStatusThunk, setStatusThunk} from \"../../../Redux/profilepage-reduser\";\r\nimport {WithRouter} from \"../../../hoc/withRouter\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n    constructor(props) {\r\n        super (props);\r\n        this.props = props\r\n    }\r\n    componentDidMount() {\r\n        let profileId = this.props.router.params[\"*\"]\r\n        if (!profileId) {\r\n            if (!profileId){\r\n                this.props.router.navigate(\"login\")\r\n            }\r\n                profileId = this.props.authorizedUserId\r\n\r\n        }\r\n\r\n        setTimeout(()=>{\r\n            this.props.getStatusThunk(profileId)\r\n        },1000)\r\n        this.props.getSomeOneProfileThunk(profileId)\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={cl.profile}>\r\n                <Profile profile={this.props.profile} setStatusThunk={this.props.setStatusThunk}\r\n                         status={this.props.status} isAuth={this.props.isAuth}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n  //    (props)=>{\r\n  //     if (!props.isAuth) return <Navigate to='/login'/>\r\n  //     return <ProfileContainer {...props} />\r\n  // }\r\n\r\n\r\n\r\n// const ProfileContainerWithRouter= (props)=>{\r\n//     let location = useLocation();\r\n//     let navigate = useNavigate();\r\n//     let params = useParams();\r\n//     return (\r\n//         <AuthRedirectComponent {...props} router={{params}}/>\r\n//     )\r\n// }\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    isAuth: state.auth.isAuth,\r\n    authorizedUserId: state.auth.userId,})\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getSomeOneProfileThunk,getStatusThunk,setStatusThunk}),\r\n    WithRouter,\r\n    // withAuthRedirect\r\n)\r\n(ProfileContainer)\r\n//compose заменяет нижние 3\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer)\r\n\r\n// let WithRouterProfile = WithRouter(AuthRedirectComponent)\r\n\r\n// export default connect(mapStateToProps, {getSomeOneProfileThunk})(WithRouterProfile)"],"names":["React","props","className","cl","src","pic","alt","message","likesCount","maxlength50","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","name","component","TextAria","validate","required","placeholder","console","log","postEL","posts","map","p","id","values","addPost","addNewPostEl","connect","state","profilePage","newTextPost","dispatch","newPostText","addPostActionCreator","Posts","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","setStatusThunk","profile","photos","large","aboutMe","fullName","lookingForAJob","lookingForAJobDescription","Preloader","isAuth","ProfileContainer","profileId","this","router","params","navigate","authorizedUserId","setTimeout","getStatusThunk","getSomeOneProfileThunk","compose","auth","userId","WithRouter"],"sourceRoot":""}